name: Manual Release Creator

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.3.0)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to access all tags and history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # Adjust if your React project needs a different version

      - name: Install dependencies and build React app
        working-directory: ./ui  # Adjust if your React app is in a different folder
        run: |
          npm ci
          npm run build

      - name: Get latest tag (if any)
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "Latest tag: $latest_tag"
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Generate changelog (files only)
        id: changelog_files
        run: |
            if [ "${{ steps.get_latest_tag.outputs.tag }}" = "" ]; then
              echo "No previous tag found. Using full history."
              git log --name-only --pretty=format: HEAD | sort | uniq | grep -v '^$' > changed_files.txt
            else
              echo "Previous tag: ${{ steps.get_latest_tag.outputs.tag }}"
              git log --name-only --pretty=format: ${{ steps.get_latest_tag.outputs.tag }}..HEAD | sort | uniq | grep -v '^$' > changed_files.txt
            fi
        
            echo '### Files Changed' > changelog_files.md
            echo '' >> changelog_files.md
        
            # Iterate through each changed file and add it to the changelog
            while read file; do
              echo "- \`$file\`" >> changelog_files.md
            done < changed_files.txt
        
            cat changelog_files.md

      - name: Generate changelog (detailed commits)
        id: changelog_commits
        run: |
              if [ "${{ steps.get_latest_tag.outputs.tag }}" = "none" ]; then
                echo "No previous tag found. Using full history."
                git log --oneline --pretty=format:"%h - %s" HEAD > commit_messages.txt
              else
                echo "Previous tag: ${{ steps.get_latest_tag.outputs.tag }}"
                git log --oneline --pretty=format:"%h - %s" ${{ steps.get_latest_tag.outputs.tag }}..HEAD > commit_messages.txt
              fi
    
              echo '### Changelog (Detailed Commits)' > changelog_commits.md
              echo '' >> changelog_commits.md
              cat commit_messages.txt | sed 's/^/- \`\`\`&\`\`\`/' >> changelog_commits.md
              cat changelog_commits.md

      - name: Prepare release files
        run: |
            # Create necessary directories and copy files
            mkdir -p release/web
            cp -r web/* release/web/
        
            mkdir -p release/client
            cp -r client/* release/client/
        
            mkdir -p release/config
            cp -r config/* release/config/
        
            mkdir -p release/locales
            cp -r locales/* release/locales/
        
            mkdir -p release/server
            cp -r server/* release/server/
        
            # Copy other essential files
            cp -r fxmanifest.lua release/fxmanifest.lua
            cp -r README.md release/README.md
        
            # Ensure the output directory exists
            mkdir -p release/output/NN-FiveM  # Create the necessary subdirectory
        
            # Check current directory for debugging purposes
            pwd
            ls -R release
        
            # Zip the release files
            cd release
            zip -r ./output/NN-FiveM/react_template_${{ github.event.inputs.version }}.zip .  # Create the zip file
        
      - name: Combine changelog files
        run: |
                echo '### Release Notes' > release_notes.md
                echo '' >> release_notes.md
                cat changelog_files.md >> release_notes.md
                cat changelog_commits.md >> release_notes.md
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
            tag_name: ${{ github.event.inputs.version }}
            name: ${{ github.repository}} ${{ github.event.inputs.version }}
            body_path: release_notes.md # Use the combined changelog file
            files: release/output/NN-FiveM/react_template_${{ github.event.inputs.version }}.zip
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
